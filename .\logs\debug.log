19-12-22 13:10 DEBUG [org.jboss.logging] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
19-12-22 13:10 INFO  [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.18.Final
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser] - Trying to load META-INF/validation.xml for XML based Validator configuration.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] - Trying to load META-INF/validation.xml via TCCL
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser] - No META-INF/validation.xml found. Using annotation based configuration only.
19-12-22 13:10 DEBUG [org.springframework.boot.env.OriginTrackedYamlLoader] - Loading from YAML: class path resource [bootstrap.yml]
19-12-22 13:10 DEBUG [org.springframework.boot.env.OriginTrackedYamlLoader] - Merging document (no matchers set): {server={port=8093}, spring={application={name=user-service}, data={mongodb={uri=mongodb://localhost:27017/eshopdb, database=eshopdb, username=root, password=root}}}}
19-12-22 13:10 DEBUG [org.springframework.boot.env.OriginTrackedYamlLoader] - Loaded 1 document from YAML resource: class path resource [bootstrap.yml]
19-12-22 13:10 DEBUG [org.springframework.boot.context.logging.ClasspathLoggingApplicationListener] - Application started with classpath: unknown
19-12-22 13:10 DEBUG [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] - Loaded expression factory via original TCCL
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
19-12-22 13:10 DEBUG [org.springframework.boot.SpringApplication] - Loading source class org.springframework.cloud.bootstrap.BootstrapImportSelectorConfiguration
19-12-22 13:10 DEBUG [org.springframework.boot.context.config.ConfigFileApplicationListener] - Loaded config file 'file:/Users/julia/IdeaProjects/reactive-microservices-eshop/user-service/target/classes/bootstrap.yml' (classpath:/bootstrap.yml)
19-12-22 13:10 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d843fd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19-12-22 13:10 DEBUG [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   ConfigServiceBootstrapConfiguration#configServicePropertySource matched:
      - @ConditionalOnProperty (spring.cloud.config.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.config.client.ConfigServicePropertySourceLocator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EncryptionBootstrapConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.crypto.encrypt.TextEncryptor' (OnClassCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ConfigServiceBootstrapConfiguration.RetryConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.annotation.Retryable' (OnClassCondition)

   DiscoveryClientConfigServiceBootstrapConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.config.discovery.enabled) did not find property 'spring.cloud.config.discovery.enabled' (OnPropertyCondition)

   EncryptionBootstrapConfiguration.RsaEncryptionConfiguration:
      Did not match:
         - Keystore nor key found in Environment (EncryptionBootstrapConfiguration.KeyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.rsa.crypto.RsaSecretEncryptor' (OnClassCondition)

   EncryptionBootstrapConfiguration.VanillaEncryptionConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.security.rsa.crypto.RsaSecretEncryptor' (OnClassCondition)

   EurekaDiscoveryClientConfigServiceBootstrapConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.config.discovery.enabled) did not find property 'spring.cloud.config.discovery.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cloud.config.client.ConfigServicePropertySourceLocator' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



19-12-22 13:10 DEBUG [org.springframework.boot.context.logging.ClasspathLoggingApplicationListener] - Application started with classpath: unknown
19-12-22 13:10 INFO  [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] - Fetching config from server at : http://localhost:8888
19-12-22 13:10 INFO  [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
19-12-22 13:10 WARN  [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator] - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/user-service/default": Connection refused (Connection refused); nested exception is java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:10 INFO  [com.gmail.kramarenko104.userservice.UserServiceApplication] - No active profile set, falling back to default profiles: default
19-12-22 13:10 DEBUG [org.springframework.boot.SpringApplication] - Loading source class com.gmail.kramarenko104.userservice.UserServiceApplication
19-12-22 13:10 DEBUG [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3569edd5
19-12-22 13:10 INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate] - Bootstrapping Spring Data repositories in DEFAULT mode.
19-12-22 13:10 DEBUG [org.springframework.boot.autoconfigure.AutoConfigurationPackages] - @EnableAutoConfiguration was declared on a class in the package 'com.gmail.kramarenko104.userservice'. Automatic @Repository and @Entity scanning is enabled.
19-12-22 13:10 DEBUG [org.springframework.data.repository.config.RepositoryConfigurationDelegate] - Scanning for repositories in packages com.gmail.kramarenko104.userservice.
19-12-22 13:10 DEBUG [org.springframework.data.repository.config.RepositoryComponentProvider] - Identified candidate component class: file [/Users/julia/IdeaProjects/reactive-microservices-eshop/user-service/target/classes/com/gmail/kramarenko104/userservice/repositories/UserRepo.class]
19-12-22 13:10 INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 104ms. Found 1 repository interfaces.
19-12-22 13:10 INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate] - Bootstrapping Spring Data repositories in DEFAULT mode.
19-12-22 13:10 DEBUG [org.springframework.data.repository.config.RepositoryConfigurationDelegate] - Scanning for repositories in packages com.gmail.kramarenko104.userservice.
19-12-22 13:10 DEBUG [org.springframework.data.repository.config.RepositoryComponentProvider] - Identified candidate component class: file [/Users/julia/IdeaProjects/reactive-microservices-eshop/user-service/target/classes/com/gmail/kramarenko104/userservice/repositories/UserRepo.class]
19-12-22 13:10 INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 5ms. Found 0 repository interfaces.
19-12-22 13:10 DEBUG [org.springframework.cloud.context.scope.GenericScope] - Generating bean factory id from names: [accessorsProvider, apacheHttpClientBuilder, apacheHttpClientFactory, apiDescriptionLookup, apiDescriptionReader, apiDocumentationScanner, apiListingBuilderPluginRegistry, apiListingReader, apiListingReferenceScanner, apiListingScanner, apiListingScannerPluginRegistry, apiModelBuilder, apiModelPropertyPropertyBuilder, apiModelReader, apiModelTypeNameProvider, apiOperationReader, apiResourceController, applicationTaskExecutor, asyncLoadBalancerInterceptor, asyncRestTemplateCustomizer, basicErrorController, beanNameHandlerMapping, beanNameViewResolver, blockingLoadBalancerClientRibbonWarnLogger, cacheAutoConfigurationValidator, cacheInterceptor, cacheManager, cacheManagerCustomizers, cacheOperationSource, cachingModelDependencyProvider, cachingModelPropertiesProvider, cachingModelProvider, cachingOperationNameGenerator, cachingOperationReader, characterEncodingFilter, classOrApiAnnotationResourceGrouping, clientConnectorCustomizer, compositeCompatibilityVerifier, compositeDiscoveryClient, configClientHealthProperties, configClientProperties, configurableEnvironmentConfiguration, configurationPropertiesBeans, configurationPropertiesRebinder, connManFactory, contextRefresher, conventionErrorViewResolver, customConversions, dataBufferFactory, default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification, default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification, defaultCodecCustomizer, defaultModelDependencyProvider, defaultModelProvider, defaultOperationReader, defaultServletHandlerMapping, defaultTagsProvider, defaultValidator, defaultViewResolver, defaults, defaultsProviderPluginRegistry, deferringLoadBalancerExchangeFilterFunction, descriptionResolver, discoveryClient, discoveryClientOptionalArgs, dispatcherServlet, dispatcherServletRegistration, documentationPluginRegistry, documentationPluginsBootstrapper, documentationPluginsManager, environmentManager, error, errorAttributes, errorPageCustomizer, errorPageRegistrarBeanPostProcessor, eurekaApplicationInfoManager, eurekaAutoServiceRegistration, eurekaClient, eurekaClientConfigBean, eurekaDiscoverClientMarker, eurekaFeature, eurekaInstanceConfigBean, eurekaReactiveDiscoveryClient, eurekaRegistration, eurekaServiceRegistry, exchangeStrategiesCustomizer, expandedParameterBuilder, expandedParameterBuilderPluginRegistry, factoryMethodProvider, fieldProvider, formContentFilter, geoJsonModule, gridFsTemplate, gson, gsonBuilder, handlerExceptionResolver, handlerFunctionAdapter, httpRequestHandlerAdapter, hystrixCircuitBreakerFactory, inMemorySwaggerResourcesProvider, inetUtils, inetUtilsProperties, jacksonCodecCustomizer, jacksonEnumTypeDeterminer, jacksonGeoModule, jacksonObjectMapper, jacksonObjectMapperBuilder, jsonComponentModule, jsonSerializer, licenseMapperImpl, loadBalancedAsyncRestTemplateInitializer, loadBalancedRestTemplateInitializerDeprecated, loadBalancerClient, loadBalancerClientFactory, loadBalancerExchangeFilterFunction, loadBalancerRequestFactory, loadBalancerWebClientBuilderBeanPostProcessor, localeCharsetMappingsCustomizer, loggingRebinder, mappingJackson2HttpMessageConverter, mappingMongoConverter, mbeanExporter, mbeanServer, mediaTypeReader, messageConverters, methodResolver, methodValidationPostProcessor, modelAttributeParameterExpander, modelBuilderPluginRegistry, modelMapperImpl, modelPropertyBuilderPluginRegistry, mongo, mongoCustomConversions, mongoDbDataSourceConfig, mongoDbFactory, mongoMappingContext, mongoTemplate, multipartConfigElement, multipartResolver, mvcContentNegotiationManager, mvcConversionService, mvcHandlerMappingIntrospector, mvcPathMatcher, mvcResourceUrlProvider, mvcUriComponentsContributor, mvcUrlPathHelper, mvcValidator, mvcViewResolver, nettyDriverCustomizer, nettyWebServerFactoryCustomizer, objectMapperBeanPropertyNamingStrategy, objectMapperConfigurer, objectNamingStrategy, operationAuthReader, operationBuilderPluginRegistry, operationDeprecatedReader, operationHiddenReader, operationHttpMethodReader, operationImplicitParameterReader, operationImplicitParametersReader, operationModelsProvider, operationModelsProviderPluginRegistry, operationNicknameIntoUniqueIdReader, operationNotesReader, operationParameterHeadersConditionReader, operationParameterReader, operationParameterRequestConditionReader, operationPathDecorator, operationPositionReader, operationResponseClassReader, operationSummaryReader, operationTagsReader, optimized, org.springframework.aop.config.internalAutoProxyCreator, org.springframework.boot.autoconfigure.AutoConfigurationPackages, org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration, org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration, org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty, org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration, org.springframework.boot.context.internalConfigurationPropertiesBinder, org.springframework.boot.context.internalConfigurationPropertiesBinderFactory, org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata, org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.cache.annotation.ProxyCachingConfiguration, org.springframework.cache.config.internalCacheAdvisor, org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration, org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer, org.springframework.cloud.client.CommonsClientAutoConfiguration, org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration, org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration, org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig, org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration, org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig, org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration, org.springframework.cloud.commons.httpclient.HttpClientConfiguration, org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration, org.springframework.cloud.commons.util.UtilAutoConfiguration, org.springframework.cloud.config.client.ConfigClientAutoConfiguration, org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration, org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration, org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration, org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$PropagateEventsConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher, org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration, org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClientConfiguration, org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerAutoConfiguration, org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerAutoConfiguration$HystrixCircuitBreakerCustomizerConfiguration, org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerAutoConfiguration$ReactiveHystrixCircuitBreakerCustomizerConfiguration, org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration, org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.event.internalEventListenerFactory, org.springframework.context.event.internalEventListenerProcessor, org.springframework.data.mongodb.config.GeoJsonConfiguration, org.springframework.data.web.config.ProjectingArgumentResolverRegistrar, org.springframework.data.web.config.SpringDataJacksonConfiguration, org.springframework.data.web.config.SpringDataWebConfiguration, pageableCustomizer, pageableResolver, parameterBuilderPluginRegistry, parameterDataTypeReader, parameterDefaultReader, parameterMapperImpl, parameterMultiplesReader, parameterNameReader, parameterNamesModule, parameterRequiredReader, parameterTypeReader, pathDecoratorRegistry, pathMappingDecorator, pathSanitizer, persistenceExceptionTranslationPostProcessor, platformTransactionManagerCustomizers, preserveErrorControllerTargetClassPostProcessor, projectingArgumentResolverBeanPostProcessor, propertiesFactory, propertyDiscriminatorBasedInheritancePlugin, propertySourcesPlaceholderConfigurer, queryStringUriTemplateDecorator, reactiveCompositeDiscoveryClient, reactiveGridFsTemplate, reactiveHystrixCircuitBreakerFactory, reactiveMongoClient, reactiveMongoDbFactory, reactiveMongoTemplate, reactorClientHttpConnector, reactorClientResourceFactory, reactorLoadBalancerClientRibbonWarnLogger, refreshEventListener, refreshScope, requestContextFilter, requestMappingHandlerAdapter, requestMappingHandlerMapping, resourceGroupCache, resourceGroupingStrategyRegistry, resourceHandlerMapping, responseMessagesReader, restTemplateBuilder, restTemplateCustomizer, ribbon-org.springframework.cloud.netflix.ribbon.ServerIntrospectorProperties, ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties, ribbonFeature, ribbonInterceptor, routerFunctionMapping, run, schemaPluginsManager, scopedTarget.eurekaApplicationInfoManager, scopedTarget.eurekaClient, scopedTarget.eurekaRegistration, securityMapperImpl, server-org.springframework.boot.autoconfigure.web.ServerProperties, serviceManagementMetadataProvider, serviceModelToSwagger2MapperImpl, servletWebServerFactoryCustomizer, simpleControllerHandlerAdapter, simpleDiscoveryClient, simpleDiscoveryProperties, simpleReactiveDiscoveryClient, simpleReactiveDiscoveryProperties, sortCustomizer, sortResolver, spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties, spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties, spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties, spring.cloud.loadbalancer.retry-org.springframework.cloud.client.loadbalancer.LoadBalancerRetryProperties, spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties, spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties, spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties, spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, spring.http-org.springframework.boot.autoconfigure.http.HttpProperties, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties, spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties, spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties, springApplicationAdminRegistrar, springBootVersionVerifier, springClientFactory, springfox.documentation.schema.configuration.ModelsConfiguration, springfox.documentation.spring.web.SpringfoxWebMvcConfiguration, springfox.documentation.swagger.configuration.SwaggerCommonConfiguration, springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration, standardGsonBuilderCustomizer, standardJacksonObjectMapperBuilderCustomizer, stringHttpMessageConverter, swagger2ControllerMapping, swagger2Module, swaggerApi, swaggerApiListingReader, swaggerExpandedParameterBuilder, swaggerMediaTypeReader, swaggerOperationModelsProvider, swaggerOperationResponseClassReader, swaggerOperationTagsReader, swaggerParameterDescriptionReader, swaggerResponseMessageReader, syntheticModelProviderPluginRegistry, taskExecutorBuilder, taskSchedulerBuilder, tomcatServletWebServerFactory, tomcatServletWebServerFactoryCustomizer, tomcatWebServerFactoryCustomizer, typeNameExtractor, typeNameProviderPluginRegistry, typeResolver, userRepo, userRestController, userServiceApplication, userServiceImpl, vendorExtensionsMapperImpl, vendorExtensionsReader, viewControllerHandlerMapping, viewResolver, webClientBuilder, webMvcRequestHandlerProvider, webServerFactoryCustomizerBeanPostProcessor, websocketServletWebServerCustomizer, welcomePageHandlerMapping]
19-12-22 13:10 INFO  [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=54a53321-9aa8-3150-bfc2-12036c860481
19-12-22 13:10 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d843fd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19-12-22 13:10 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$fb5381f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19-12-22 13:10 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig$$EnhancerBySpringCGLIB$$f108c8ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19-12-22 13:10 INFO  [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19-12-22 13:10 DEBUG [org.springframework.ui.context.support.UiApplicationContextUtils] - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@6b0f266e]
19-12-22 13:10 DEBUG [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory] - Code archive: /Users/julia/.m2/repository/org/springframework/boot/spring-boot/2.2.1.RELEASE/spring-boot-2.2.1.RELEASE.jar
19-12-22 13:10 DEBUG [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory] - Code archive: /Users/julia/.m2/repository/org/springframework/boot/spring-boot/2.2.1.RELEASE/spring-boot-2.2.1.RELEASE.jar
19-12-22 13:10 DEBUG [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory] - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
19-12-22 13:10 INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8093 (http)
19-12-22 13:10 INFO  [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 4151 ms
19-12-22 13:10 DEBUG [org.springframework.boot.web.servlet.ServletContextInitializerBeans] - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
19-12-22 13:10 DEBUG [org.springframework.boot.web.servlet.ServletContextInitializerBeans] - Mapping servlets: dispatcherServlet urls=[/]
19-12-22 13:10 DEBUG [org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter] - Filter 'requestContextFilter' configured for use
19-12-22 13:10 DEBUG [org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter] - Filter 'characterEncodingFilter' configured for use
19-12-22 13:10 DEBUG [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter] - Filter 'formContentFilter' configured for use
19-12-22 13:10 INFO  [org.mongodb.driver.cluster] - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
19-12-22 13:10 INFO  [org.mongodb.driver.connection] - Opened connection [connectionId{localValue:1, serverValue:38}] to localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 4 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 4 completed successfully in 55.15 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:10 INFO  [org.mongodb.driver.cluster] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 4]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=76315899}
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=76.3 ms, state=CONNECTED}]
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 DEBUG [org.springframework.data.repository.core.support.RepositoryFactorySupport] - Initializing repository instance for com.gmail.kramarenko104.userservice.repositories.UserRepo…
19-12-22 13:10 DEBUG [org.springframework.jmx.support.JmxUtils] - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@319b92f3
19-12-22 13:10 DEBUG [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
19-12-22 13:10 DEBUG [org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator] - Analyzing class class com.gmail.kramarenko104.userservice.models.Cart for index information.
19-12-22 13:10 DEBUG [reactor.util.Loggers$LoggerFactory] - Using Slf4j logging framework
19-12-22 13:10 DEBUG [org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator] - Analyzing class class com.gmail.kramarenko104.userservice.models.Order for index information.
19-12-22 13:10 DEBUG [org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator] - Analyzing class class com.gmail.kramarenko104.userservice.models.Role for index information.
19-12-22 13:10 DEBUG [org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator] - Analyzing class class com.gmail.kramarenko104.userservice.models.User for index information.
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field '_id' in type 'Cart' for path 'cart -> user -> cart'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field '_id' in type 'Cart' for path 'cart -> user -> userOrders -> user -> cart'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field '_id' in type 'Order' for path 'userOrders -> user -> userOrders'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field '_id' in type 'Cart' for path 'cart -> user -> cart'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field '_id' in type 'Order' for path 'userOrders -> user -> cart -> user -> userOrders'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field '_id' in type 'Order' for path 'userOrders -> user -> userOrders'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field 'user' in type 'Cart' for path 'cart -> user -> cart'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field 'cart' in type 'User' for path 'cart -> user -> userOrders -> user -> cart'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field 'cart' in type 'User' for path 'cart -> user -> cart'
19-12-22 13:10 INFO  [org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver] - Found cycle for field 'user' in type 'Order' for path 'userOrders -> user -> userOrders'
19-12-22 13:10 DEBUG [org.springframework.data.repository.core.support.RepositoryFactorySupport] - Finished creation of repository instance for com.gmail.kramarenko104.userservice.repositories.UserRepo.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping] - initialising the handler methods
19-12-22 13:10 INFO  [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
19-12-22 13:10 INFO  [org.mongodb.driver.connection] - Opened connection [connectionId{localValue:2, serverValue:39}] to localhost:27017
19-12-22 13:10 INFO  [org.mongodb.driver.connection] - Opened connection [connectionId{localValue:3, serverValue:40}] to localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"listCollections": 1, "cursor": {"batchSize": 2147483647}, "nameOnly": true, "$db": "eshopdb"}' with request id 11 to database eshopdb on connection [connectionId{localValue:3, serverValue:40}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 11 completed successfully in 4.18 ms on connection [connectionId{localValue:3, serverValue:40}] to server localhost:27017
19-12-22 13:10 WARN  [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
19-12-22 13:10 INFO  [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
19-12-22 13:10 WARN  [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
19-12-22 13:10 INFO  [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
19-12-22 13:10 DEBUG [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] - Loaded expression factory via original TCCL
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser] - Trying to load META-INF/validation.xml for XML based Validator configuration.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] - Trying to load META-INF/validation.xml via user class loader
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] - Trying to load META-INF/validation.xml via TCCL
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser] - No META-INF/validation.xml found. Using annotation based configuration only.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
19-12-22 13:10 DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
19-12-22 13:10 INFO  [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'applicationTaskExecutor'
19-12-22 13:10 INFO  [org.mongodb.driver.cluster] - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING}]
19-12-22 13:10 INFO  [org.mongodb.driver.connection] - Opened connection [connectionId{localValue:4, serverValue:41}] to localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 15 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 15 completed successfully in 1.13 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:10 INFO  [org.mongodb.driver.cluster] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 4]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2002876}
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 WARN  [org.springframework.data.convert.CustomConversions] - Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
19-12-22 13:10 DEBUG [io.netty.util.internal.logging.InternalLoggerFactory] - Using SLF4J as the default logging framework
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - Platform: MacOS
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - -Dio.netty.noUnsafe: false
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - Java version: 11
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - sun.misc.Unsafe.theUnsafe: available
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - sun.misc.Unsafe.copyMemory: available
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - java.nio.Buffer.address: available
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.ConstantPool.<init>(ConstantPool.java:32)
	at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)
	at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)
	at reactor.netty.resources.PooledConnectionProvider.<clinit>(PooledConnectionProvider.java:215)
	at reactor.netty.resources.ConnectionProvider.fixed(ConnectionProvider.java:188)
	at reactor.netty.resources.ConnectionProvider.fixed(ConnectionProvider.java:159)
	at reactor.netty.resources.ConnectionProvider.fixed(ConnectionProvider.java:141)
	at reactor.netty.tcp.TcpResources.create(TcpResources.java:291)
	at reactor.netty.tcp.TcpResources.getOrCreate(TcpResources.java:236)
	at reactor.netty.http.HttpResources.get(HttpResources.java:41)
	at org.springframework.http.client.reactive.ReactorResourceFactory.afterPropertiesSet(ReactorResourceFactory.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.gmail.kramarenko104.userservice.UserServiceApplication.main(UserServiceApplication.java:35)
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - java.nio.Bits.unaligned: available, true
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @51888019
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.util.ConstantPool.<init>(ConstantPool.java:32)
	at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)
	at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)
	at reactor.netty.resources.PooledConnectionProvider.<clinit>(PooledConnectionProvider.java:215)
	at reactor.netty.resources.ConnectionProvider.fixed(ConnectionProvider.java:188)
	at reactor.netty.resources.ConnectionProvider.fixed(ConnectionProvider.java:159)
	at reactor.netty.resources.ConnectionProvider.fixed(ConnectionProvider.java:141)
	at reactor.netty.tcp.TcpResources.create(TcpResources.java:291)
	at reactor.netty.tcp.TcpResources.getOrCreate(TcpResources.java:236)
	at reactor.netty.http.HttpResources.get(HttpResources.java:41)
	at org.springframework.http.client.reactive.ReactorResourceFactory.afterPropertiesSet(ReactorResourceFactory.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.gmail.kramarenko104.userservice.UserServiceApplication.main(UserServiceApplication.java:35)
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent0] - java.nio.DirectByteBuffer.<init>(long, int): unavailable
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - sun.misc.Unsafe: available
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - maxDirectMemory: 2147483648 bytes (maybe)
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - -Dio.netty.tmpdir: /var/folders/xg/thrl3sg51_vfm0jvy2zq8y280000gp/T (java.io.tmpdir)
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - -Dio.netty.maxDirectMemory: -1 bytes
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
19-12-22 13:10 DEBUG [io.netty.util.internal.CleanerJava9] - java.nio.ByteBuffer.cleaner(): available
19-12-22 13:10 DEBUG [io.netty.util.internal.PlatformDependent] - -Dio.netty.noPreferDirect: false
19-12-22 13:10 DEBUG [reactor.netty.tcp.TcpResources] - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=4, workerCount=4}
19-12-22 13:10 DEBUG [reactor.netty.tcp.TcpResources] - [http] resources will use the default ConnectionProvider: PooledConnectionProvider {name=http, poolFactory=reactor.netty.resources.ConnectionProvider$$Lambda$973/0x0000000800765440@efa04b5}
19-12-22 13:10 DEBUG [io.netty.util.NetUtil] - -Djava.net.preferIPv4Stack: false
19-12-22 13:10 DEBUG [io.netty.util.NetUtil] - -Djava.net.preferIPv6Addresses: false
19-12-22 13:10 DEBUG [io.netty.util.NetUtil] - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
19-12-22 13:10 DEBUG [io.netty.util.NetUtil] - Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
19-12-22 13:10 DEBUG [org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider] - Constructed eureka meta-data healthcheckUrl: http://air-julia:8093/actuator/health
19-12-22 13:10 DEBUG [org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider] - Constructed eureka meta-data statusPageUrl: http://air-julia:8093/actuator/info
19-12-22 13:10 WARN  [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
19-12-22 13:10 WARN  [org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger] - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
19-12-22 13:10 DEBUG [org.springframework.cloud.configuration.SpringBootVersionVerifier] - Version found in Boot manifest [2.2.1.RELEASE]
19-12-22 13:10 DEBUG [org.springframework.cloud.configuration.SpringBootVersionVerifier] - Predicate [Predicate for Boot 2.1] was matched
19-12-22 13:10 DEBUG [org.springframework.cloud.configuration.CompositeCompatibilityVerifier] - All conditions are passing
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Autodetecting user-defined JMX MBeans
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
19-12-22 13:10 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3569edd5,type=ConfigurationPropertiesRebinder]
19-12-22 13:10 INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
19-12-22 13:10 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
19-12-22 13:10 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
19-12-22 13:10 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
19-12-22 13:10 INFO  [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
19-12-22 13:10 INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
19-12-22 13:10 DEBUG [com.netflix.discovery.endpoint.EndpointUtils] - The availability zone for the given region us-east-1 are [defaultZone]
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Config resolved to [AwsEndpoint{ serviceUrl='http://localhost:8761/eureka/', region='us-east-1', zone='defaultZone'}]
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.resolver.aws.ZoneAffinityClusterResolver] - Local zone=defaultZone; resolved to: [AwsEndpoint{ serviceUrl='http://localhost:8761/eureka/', region='us-east-1', zone='defaultZone'}]
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Application is null : false
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient] - Ending a session and starting anew
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5d260494 closed
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5d260494 shut down
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5d260494 closed
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP GET http://localhost:8761/eureka//apps/?; statusCode=N/A
19-12-22 13:10 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$94ed38ef.CGLIB$eurekaClient$2(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$94ed38ef$$FastClassBySpringCGLIB$$1c771402.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$94ed38ef.eurekaClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:279)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$511281ab.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.gmail.kramarenko104.userservice.UserServiceApplication.main(UserServiceApplication.java:35)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 80 more
19-12-22 13:10 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:10 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$94ed38ef.CGLIB$eurekaClient$2(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$94ed38ef$$FastClassBySpringCGLIB$$1c771402.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$94ed38ef.eurekaClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:279)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$511281ab.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.gmail.kramarenko104.userservice.UserServiceApplication.main(UserServiceApplication.java:35)
19-12-22 13:10 WARN  [com.netflix.discovery.DiscoveryClient] - Using default backup registry implementation which does not do anything.
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
19-12-22 13:10 INFO  [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1577013049934 with initial instances count: 0
19-12-22 13:10 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application USER-SERVICE with eureka with status UP
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1577013049944, current=UP, previous=STARTING]
19-12-22 13:10 DEBUG [com.netflix.discovery.InstanceInfoReplicator] - Executing on-demand update of local InstanceInfo
19-12-22 13:10 DEBUG [com.netflix.discovery.InstanceInfoReplicator] - Canceling the latest scheduled update, it will be rescheduled at the end of on demand update
19-12-22 13:10 INFO  [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper] - Context refreshed
19-12-22 13:10 INFO  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093: registering service...
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient] - Ending a session and starting anew
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@38150cc9 closed
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@38150cc9 shut down
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:10 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@38150cc9 closed
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:10 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP POST http://localhost:8761/eureka//apps/USER-SERVICE with instance air-julia:user-service:8093; statusCode=N/A
19-12-22 13:10 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
19-12-22 13:10 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:10 WARN  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:10 WARN  [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:10 INFO  [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper] - Found 1 custom documentation plugin(s)
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Total number of request handlers 12
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/error], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/error], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/error], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/error], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[text/html]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/swagger-resources/configuration/security], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/security], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/swagger-resources/configuration/ui], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/ui], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/swagger-resources], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/users/api/{userId}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/users/api/{userId}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/users/{userId}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/users/{userId}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/users/{userId}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/users/{userId}], supportedMethods=[DELETE], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/users], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/users], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/users], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/users], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/users], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/users], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Adding key: [/users], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/users], supportedMethods=[PUT], supportedMediaTypes=[], producibleMediaTypes=[]}}
19-12-22 13:10 DEBUG [springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner] - Combined number of request handlers 12
19-12-22 13:10 INFO  [springfox.documentation.spring.web.scanners.ApiListingReferenceScanner] - Scanning for api listing references
19-12-22 13:10 DEBUG [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ArchaiusAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.netflix.config.ConcurrentCompositeConfiguration', 'org.apache.commons.configuration.ConfigurationBuilder' (OnClassCondition)

   ArchaiusAutoConfiguration.PropagateEventsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.environment.EnvironmentChangeEvent' (OnClassCondition)
      - @ConditionalOnProperty (archaius.propagate.environmentChangedEvent) matched (OnPropertyCondition)

   AsyncLoadBalancerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.AsyncRestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'loadBalancerClient' (OnBeanCondition)

   AutoServiceRegistrationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   AutoServiceRegistrationConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   BlockingLoadBalancerClientAutoConfiguration#blockingLoadBalancerClientRibbonWarnLogger matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.loadbalancer.ribbon.enabled) matched (OnPropertyCondition)

   CacheAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) found bean 'cacheInterceptor'; @ConditionalOnBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheAutoConfiguration#cacheManagerCustomizers matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ClientHttpConnectorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration#clientConnectorCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) found bean 'reactorClientHttpConnector' (OnBeanCondition)

   ClientHttpConnectorConfiguration.ReactorNetty matched:
      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ClientHttpConnectorConfiguration.ReactorNetty#reactorClientResourceFactory matched:
      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ReactorResourceFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CodecsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.http.codec.CodecConfigurer', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration.JacksonCodecConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   CompatibilityVerifierAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.compatibility-verifier.enabled) matched (OnPropertyCondition)

   ConfigurationPropertiesRebinderAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)

   DiscoveryClientOptionalArgsConfiguration#discoveryClientOptionalArgs matched:
      - @ConditionalOnClass found required class 'com.sun.jersey.api.client.filter.ClientFilter' (OnClassCondition)
      - @ConditionalOnBean (types: com.netflix.discovery.AbstractDiscoveryClientOptionalArgs; SearchStrategy: current) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched (OnPropertyCondition)

   EurekaClientAutoConfiguration#eurekaAutoServiceRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaClientConfigBean matched:
      - @ConditionalOnBean (types: com.netflix.discovery.EurekaClientConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaInstanceConfigBean matched:
      - @ConditionalOnBean (types: com.netflix.appinfo.EurekaInstanceConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#serviceManagementMetadataProvider matched:
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.refresh.enable=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaApplicationInfoManager matched:
      - @ConditionalOnBean (types: com.netflix.appinfo.ApplicationInfoManager; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaClient matched:
      - @ConditionalOnBean (types: com.netflix.discovery.EurekaClient; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaDiscoveryClientConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)

   EurekaDiscoveryClientConfiguration#discoveryClient matched:
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaDiscoveryClientConfiguration.EurekaClientConfigurationRefresher matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent' (OnClassCondition)

   EurekaReactiveDiscoveryClientConfiguration matched:
      - @ConditionalOnClass found required classes 'com.netflix.discovery.EurekaClientConfig', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)

   EurekaReactiveDiscoveryClientConfiguration#eurekaReactiveDiscoveryClient matched:
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.http.client.HttpClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.httpclientfactories.apache.enabled) matched (OnPropertyCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration#apacheHttpClientBuilder matched:
      - @ConditionalOnBean (types: org.apache.http.impl.client.HttpClientBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration#apacheHttpClientFactory matched:
      - @ConditionalOnBean (types: org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration#connManFactory matched:
      - @ConditionalOnBean (types: org.springframework.cloud.commons.httpclient.ApacheHttpClientConnectionManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.http.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HystrixCircuitBreakerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.hystrix.Hystrix' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.circuitbreaker.hystrix.enabled) matched (OnPropertyCondition)

   HystrixCircuitBreakerAutoConfiguration#hystrixCircuitBreakerFactory matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.circuitbreaker.CircuitBreakerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HystrixCircuitBreakerAutoConfiguration#reactiveHystrixCircuitBreakerFactory matched:
      - @ConditionalOnClass found required classes 'reactor.core.publisher.Mono', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HystrixCircuitBreakerAutoConfiguration.ReactiveHystrixCircuitBreakerCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'reactor.core.publisher.Mono', 'reactor.core.publisher.Flux' (OnClassCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LifecycleMvcEndpointAutoConfiguration#environmentManager matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.environment.EnvironmentManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'loadBalancerClient' (OnBeanCondition)

   LoadBalancerAutoConfiguration#loadBalancerRequestFactory matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig#restTemplateCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on LoadBalancerBeanPostProcessorAutoConfiguration.OnAnyLoadBalancerImplementationPresentCondition.LoadBalancerClientPresent @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'loadBalancerClient'; NestedCondition on LoadBalancerBeanPostProcessorAutoConfiguration.OnAnyLoadBalancerImplementationPresentCondition.ReactiveLoadBalancerFactoryPresent @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory; SearchStrategy: all) found bean 'loadBalancerClientFactory' (LoadBalancerBeanPostProcessorAutoConfiguration.OnAnyLoadBalancerImplementationPresentCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration.ReactiveLoadBalancerConfig matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'loadBalancerClient' (OnBeanCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration.ReactiveLoadBalancerConfig#deferringLoadBalancerExchangeFilterFunction matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerCacheAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.cache.CacheManager', 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDbFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnBean (types: com.mongodb.MongoClient,com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.MongoClient', 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDbFactoryConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MongoDbFactoryConfiguration.AnyMongoClientAvailable.FallbackClientAvailable @ConditionalOnBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans of type com.mongodb.client.MongoClient; NestedCondition on MongoDbFactoryConfiguration.AnyMongoClientAvailable.PreferredClientAvailable @ConditionalOnBean (types: com.mongodb.MongoClient; SearchStrategy: all) found bean 'mongo' (MongoDbFactoryConfiguration.AnyMongoClientAvailable)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDbFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDbFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDbFactory; SearchStrategy: all) found bean 'mongoDbFactory' (OnBeanCondition)

   MongoDbFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDbFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.reactivestreams.client.MongoClient', 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveAutoConfiguration.NettyDriverConfiguration matched:
      - @ConditionalOnClass found required classes 'io.netty.channel.socket.SocketChannel', 'io.netty.channel.nio.NioEventLoopGroup' (OnClassCondition)

   MongoReactiveDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.reactivestreams.client.MongoClient', 'org.springframework.data.mongodb.core.ReactiveMongoTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: com.mongodb.reactivestreams.client.MongoClient; SearchStrategy: all) found bean 'reactiveMongoClient' (OnBeanCondition)

   MongoReactiveDataAutoConfiguration#dataBufferFactory matched:
      - @ConditionalOnBean (types: org.springframework.core.io.buffer.DataBufferFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoReactiveDataAutoConfiguration#reactiveGridFsTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.gridfs.ReactiveGridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoReactiveRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.reactivestreams.client.MongoClient', 'org.springframework.data.mongodb.repository.ReactiveMongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.ReactiveMongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2ResourceServerAutoConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveCompositeDiscoveryClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)

   ReactiveLoadBalancerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'loadBalancerClient'; @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ReactorLoadBalancerClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory; SearchStrategy: all) found bean 'loadBalancerClientFactory' (OnBeanCondition)

   ReactorLoadBalancerClientAutoConfiguration#reactorLoadBalancerClientRibbonWarnLogger matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.loadbalancer.ribbon.enabled) matched (OnPropertyCondition)

   RefreshAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.refresh.enabled) matched (OnPropertyCondition)

   RefreshAutoConfiguration#contextRefresher matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.refresh.ContextRefresher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#loggingRebinder matched:
      - @ConditionalOnBean (types: org.springframework.cloud.logging.LoggingRebinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScope matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.scope.refresh.RefreshScope; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RibbonAutoConfiguration matched:
      - AllNestedConditions 4 matched 0 did not; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.RibbonPresent @ConditionalOnClass found required class 'com.netflix.ribbon.Ribbon'; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.AsyncRestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.AsyncRestTemplate'; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.IClientPresent @ConditionalOnClass found required class 'com.netflix.client.IClient' (RibbonAutoConfiguration.RibbonClassesConditions)

   RibbonAutoConfiguration#loadBalancerClient matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RibbonAutoConfiguration#propertiesFactory matched:
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.ribbon.PropertiesFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RibbonEurekaAutoConfiguration matched:
      - AllNestedConditions 3 matched 0 did not; NestedCondition on ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition.OnEurekaClientEnabled found matching nested conditions @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched, @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; NestedCondition on ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition.EurekaBeans @ConditionalOnBean (types: com.netflix.discovery.EurekaClient; SearchStrategy: all) found beans 'scopedTarget.eurekaClient', 'eurekaClient'; NestedCondition on ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition.Defaults found matching nested conditions @ConditionalOnClass found required class 'com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList', @ConditionalOnBean (types: org.springframework.cloud.netflix.ribbon.SpringClientFactory; SearchStrategy: all) found bean 'springClientFactory', @ConditionalOnProperty (ribbon.eureka.enabled) matched (ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleReactiveDiscoveryClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   UtilAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.util.enabled) matched (OnPropertyCondition)

   UtilAutoConfiguration#inetUtils matched:
      - @ConditionalOnBean (types: org.springframework.cloud.commons.util.InetUtils; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientAutoConfiguration#webClientBuilder matched:
      - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebClientAutoConfiguration.WebClientCodecsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.codec.CodecCustomizer; SearchStrategy: all) found beans 'jacksonCodecCustomizer', 'defaultCodecCustomizer' (OnBeanCondition)

   WebClientAutoConfiguration.WebClientCodecsConfiguration#exchangeStrategiesCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArchaiusAutoConfiguration.ArchaiusEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BlockingLoadBalancerClientAutoConfiguration.BlockingLoadbalancerClientConfig:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on BlockingLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition.RibbonLoadBalancerNotPresent @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient'; NestedCondition on BlockingLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition.RibbonNotEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.ribbon.enabled=false) did not find property 'spring.cloud.loadbalancer.ribbon.enabled' (BlockingLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Session' (OnClassCondition)

   ClientHttpConnectorConfiguration.JettyClient:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.reactive.client.ReactiveRequest' (OnClassCondition)

   CloudHypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.client.hypermedia.RemoteResource; SearchStrategy: all) did not find any beans of type org.springframework.cloud.client.hypermedia.RemoteResource (OnBeanCondition)

   CloudServiceConnectorsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.java.CloudScanConfiguration' (OnClassCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)

   ConfigClientAutoConfiguration.ConfigClientWatchConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.config.watch.enabled) did not find property 'spring.cloud.config.watch.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cloud.context.refresh.ContextRefresher' (OnClassCondition)

   ConfigClientAutoConfiguration.ConfigServerHealthIndicatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.couchbase.client.java.Bucket', 'com.couchbase.client.spring.cache.CouchbaseCacheManager' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateDiscoveryClientOptionalArgs:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'com.sun.jersey.api.client.filter.ClientFilter' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - not a reactive web application (OnWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaClientConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.OnPropertyDisabled @ConditionalOnProperty (eureka.client.refresh.enable=false) did not find property 'eureka.client.refresh.enable'; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingScope @ConditionalOnBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found beans of type 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingClass @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   EurekaClientConfigServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.server.config.ConfigServerProperties' (OnClassCondition)

   EurekaDiscoveryClientConfigServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.config.discovery.enabled) did not find property 'spring.cloud.config.discovery.enabled' (OnPropertyCondition)

   EurekaDiscoveryClientConfiguration.EurekaHealthCheckHandlerConfiguration:
      Did not match:
         - @ConditionalOnProperty (eureka.client.healthcheck.enabled) did not find property 'eureka.client.healthcheck.enabled' (OnPropertyCondition)

   EurekaReactiveDiscoveryClientConfiguration#eurekaReactiveDiscoveryClientHealthIndicator:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.ReactiveHealthIndicator' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GenericCacheConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.Cache; SearchStrategy: all) did not find any beans of type org.springframework.cache.Cache (OnBeanCondition)
      Matched:
         - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=jsonb) did not find property 'spring.http.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=gson) did not find property 'spring.http.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.core.HazelcastInstance', 'com.hazelcast.spring.cache.HazelcastCacheManager' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpClientConfiguration.OkHttpClientConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'okhttp3.OkHttpClient' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - not a reactive web application (OnWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   HystrixAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration' (OnClassCondition)

   HystrixSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.core.context.SecurityContext' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonAutoConfiguration.JodaDateTimeJacksonConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.fasterxml.jackson.datatype.joda.ser.DateTimeSerializer', 'com.fasterxml.jackson.datatype.joda.cfg.JacksonJodaDateFormat' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JestAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.searchbox.client.JestClient' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration.ReactorDeferringLoadBalancerFilterConfig:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactorLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition.RibbonLoadBalancerNotPresent @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient'; NestedCondition on ReactorLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition.RibbonNotEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.ribbon.enabled=false) did not find property 'spring.cloud.loadbalancer.ribbon.enabled' (ReactorLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.activation.MimeType' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoDataConfiguration#mongoMappingContext:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.mapping.MongoMappingContext' mongoMappingContext (OnBeanCondition)

   MongoDbFactoryDependentConfiguration#mappingMongoConverter:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.convert.MongoConverter' mappingMongoConverter (OnBeanCondition)

   MongoReactiveAutoConfiguration#reactiveStreamsMongoClient:
      Did not match:
         - @ConditionalOnBean (types: com.mongodb.reactivestreams.client.MongoClient; SearchStrategy: all) found beans of type 'com.mongodb.reactivestreams.client.MongoClient' reactiveMongoClient (OnBeanCondition)

   MongoReactiveDataAutoConfiguration#mappingMongoConverter:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.convert.MongoConverter' mappingMongoConverter (OnBeanCondition)

   MongoReactiveDataAutoConfiguration#reactiveMongoDatabaseFactory:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.ReactiveMongoDatabaseFactory; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.ReactiveMongoDatabaseFactory' reactiveMongoDbFactory (OnBeanCondition)

   MongoReactiveDataAutoConfiguration#reactiveMongoTemplate:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoOperations; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.ReactiveMongoOperations' reactiveMongoTemplate (OnBeanCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.SessionFactory' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.Neo4jSession' (OnClassCondition)

   NoOpCacheConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   NoopDiscoveryClientAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.DiscoveryClient; SearchStrategy: all) found beans of type 'org.springframework.cloud.client.discovery.DiscoveryClient' compositeDiscoveryClient, simpleDiscoveryClient, discoveryClient (OnBeanCondition)

   NoopDiscoveryClientAutoConfiguration.Boot15PortFinderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext' (OnClassCondition)
         - Ancestor org.springframework.cloud.client.discovery.noop.NoopDiscoveryClientAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration.JwtConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken', 'org.springframework.security.oauth2.jwt.JwtDecoder' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration.OpaqueTokenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveCommonsClientAutoConfiguration.ReactiveDiscoveryLoadBalancerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.ReactiveHealthIndicator' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveRestClients' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - not a reactive web application (OnWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.http.ReactiveHttpInputMessage' (OnClassCondition)

   ReactorLoadBalancerClientAutoConfiguration.ReactorLoadBalancerExchangeFilterFunctionConfig:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactorLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition.RibbonLoadBalancerNotPresent @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient'; NestedCondition on ReactorLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition.RibbonNotEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.ribbon.enabled=false) did not find property 'spring.cloud.loadbalancer.ribbon.enabled' (ReactorLoadBalancerClientAutoConfiguration.OnNoRibbonDefaultCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RefreshAutoConfiguration.JpaInvokerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   RefreshEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   RestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   RibbonAutoConfiguration#loadBalancedRetryPolicyFactory:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   RibbonAutoConfiguration#ribbonApplicationContextInitializer:
      Did not match:
         - @ConditionalOnProperty (ribbon.eager-load.enabled) did not find property 'ribbon.eager-load.enabled' (OnPropertyCondition)

   RibbonAutoConfiguration.RibbonClientHttpRequestFactoryConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on RibbonAutoConfiguration.OnRibbonRestClientCondition.RibbonProperty @ConditionalOnProperty (ribbon.restclient.enabled) did not find property 'ribbon.restclient.enabled'; NestedCondition on RibbonAutoConfiguration.OnRibbonRestClientCondition.ZuulProperty @ConditionalOnProperty (ribbon.http.client.enabled) did not find property 'ribbon.http.client.enabled' (RibbonAutoConfiguration.OnRibbonRestClientCondition)
      Matched:
         - @ConditionalOnClass found required class 'com.netflix.client.http.HttpRequest' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SimpleReactiveDiscoveryClientAutoConfiguration.HealthConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.ReactiveHealthIndicator' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans of type org.springframework.transaction.TransactionManager (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - not a reactive web application (OnWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#localeResolver:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.locale) did not find property 'locale' (OnPropertyCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - not a reactive web application (OnWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   WritableEnvironmentEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration

    org.springframework.cloud.client.CommonsClientAutoConfiguration

    org.springframework.cloud.commons.httpclient.HttpClientConfiguration

    org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration

    org.springframework.cloud.config.client.ConfigClientAutoConfiguration

    org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration

    org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration

    org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration

    org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



19-12-22 13:10 INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8093 (http) with context path ''
19-12-22 13:10 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 8093
19-12-22 13:10 INFO  [com.gmail.kramarenko104.userservice.UserServiceApplication] - Started UserServiceApplication in 14.029 seconds (JVM running for 17.007)
19-12-22 13:10 DEBUG [org.springframework.data.mongodb.core.ReactiveMongoTemplate] - find using query: {} fields: Document{{}} for class: class com.gmail.kramarenko104.userservice.models.User in collection: users
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"find": "users", "batchSize": 2147483647, "$db": "eshopdb"}' with request id 16 to database eshopdb on connection [connectionId{localValue:2, serverValue:39}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 16 completed successfully in 3.61 ms on connection [connectionId{localValue:2, serverValue:39}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 17 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 17 completed successfully in 1.82 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=61.6 ms, state=CONNECTED}]
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 18 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 18 completed successfully in 1.18 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:10 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 19 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 19 completed successfully in 2.19 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=49.9 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 20 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 20 completed successfully in 0.84 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 21 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 21 completed successfully in 1.51 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=40.3 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 22 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 22 completed successfully in 1.38 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Application is null : false
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 1, total allocated: 1 out of 200
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 49 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@44062eee closed
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@44062eee shut down
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@44062eee closed
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@51a6cc41 closed
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@51a6cc41 shut down
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP GET http://localhost:8761/eureka//apps/?; statusCode=N/A
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@51a6cc41 closed
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:11 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP PUT http://localhost:8761/eureka//apps/USER-SERVICE/air-julia:user-service:8093; statusCode=N/A
19-12-22 13:11 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:11 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
19-12-22 13:11 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:11 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 DEBUG [com.netflix.discovery.DiscoveryClient] - Completed cache refresh task for discovery. All Apps hash code is Local region apps hashcode: null, is fetching remote regions? false 
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093: registering service...
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@8cc5ff2 closed
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@8cc5ff2 shut down
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@8cc5ff2 closed
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP POST http://localhost:8761/eureka//apps/USER-SERVICE with instance air-julia:user-service:8093; statusCode=N/A
19-12-22 13:11 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more
19-12-22 13:11 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:11 WARN  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 WARN  [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 23 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 23 completed successfully in 1.42 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=32.7 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 24 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 24 completed successfully in 0.83 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 25 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 25 completed successfully in 2.10 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=26.9 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 26 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 26 completed successfully in 1.27 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 27 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 27 completed successfully in 4.47 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=22.6 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 28 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 28 completed successfully in 1.05 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Application is null : false
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 1, total allocated: 1 out of 200
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 49 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@644ecf2b closed
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@644ecf2b shut down
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@644ecf2b closed
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@39554de9 closed
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@39554de9 shut down
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP PUT http://localhost:8761/eureka//apps/USER-SERVICE/air-julia:user-service:8093; statusCode=N/A
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@39554de9 closed
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP GET http://localhost:8761/eureka//apps/?; statusCode=N/A
19-12-22 13:11 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
19-12-22 13:11 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:11 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
19-12-22 13:11 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:11 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 DEBUG [com.netflix.discovery.DiscoveryClient] - Completed cache refresh task for discovery. All Apps hash code is Local region apps hashcode: null, is fetching remote regions? false 
19-12-22 13:11 INFO  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093: registering service...
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5551f00f closed
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5551f00f shut down
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:11 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5551f00f closed
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:11 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP POST http://localhost:8761/eureka//apps/USER-SERVICE with instance air-julia:user-service:8093; statusCode=N/A
19-12-22 13:11 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more
19-12-22 13:11 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:11 WARN  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 WARN  [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 29 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 29 completed successfully in 1.35 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=18.5 ms, state=CONNECTED}]
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 30 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 30 completed successfully in 0.78 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:11 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 31 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 31 completed successfully in 1.91 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=15.3 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 32 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 32 completed successfully in 1.83 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 33 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 33 completed successfully in 1.37 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=12.7 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 34 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 34 completed successfully in 1.01 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Application is null : false
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 1, total allocated: 1 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 49 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@4dd97337 closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@615ac23f closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@4dd97337 shut down
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@615ac23f shut down
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@4dd97337 closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@615ac23f closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP PUT http://localhost:8761/eureka//apps/USER-SERVICE/air-julia:user-service:8093; statusCode=N/A
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP GET http://localhost:8761/eureka//apps/?; statusCode=N/A
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 DEBUG [com.netflix.discovery.DiscoveryClient] - Completed cache refresh task for discovery. All Apps hash code is Local region apps hashcode: null, is fetching remote regions? false 
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093: registering service...
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@115f5874 closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@115f5874 shut down
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@115f5874 closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP POST http://localhost:8761/eureka//apps/USER-SERVICE with instance air-julia:user-service:8093; statusCode=N/A
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 WARN  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 WARN  [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 35 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 35 completed successfully in 1.40 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=10.6 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 36 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 36 completed successfully in 1.88 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 37 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 37 completed successfully in 4.19 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=9.6 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 38 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 38 completed successfully in 0.93 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 39 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 39 completed successfully in 1.40 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=8.2 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 40 to database admin on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 40 completed successfully in 0.86 ms on connection [connectionId{localValue:4, serverValue:41}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Closing connections idle longer than 30000 SECONDS
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Application is null : false
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 1, total allocated: 1 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 49 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@6ca9759b closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@32c0e197 closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@6ca9759b shut down
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@32c0e197 shut down
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@6ca9759b closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@32c0e197 closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP PUT http://localhost:8761/eureka//apps/USER-SERVICE/air-julia:user-service:8093; statusCode=N/A
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP GET http://localhost:8761/eureka//apps/?; statusCode=N/A
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 DEBUG [com.netflix.discovery.DiscoveryClient] - Completed cache refresh task for discovery. All Apps hash code is Local region apps hashcode: null, is fetching remote regions? false 
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093: registering service...
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@2607e302 closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@2607e302 shut down
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@2607e302 closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP POST http://localhost:8761/eureka//apps/USER-SERVICE with instance air-julia:user-service:8093; statusCode=N/A
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 WARN  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 WARN  [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Checking status of localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Sending command '{"ismaster": 1, "$db": "admin"}' with request id 41 to database admin on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.protocol.command] - Execution of command with request id 41 completed successfully in 2.09 ms on connection [connectionId{localValue:1, serverValue:38}] to server localhost:27017
19-12-22 13:12 DEBUG [org.mongodb.driver.cluster] - Updating cluster description to  {type=STANDALONE, servers=[{address=localhost:27017, type=STANDALONE, roundTripTime=7.1 ms, state=CONNECTED}]
19-12-22 13:12 DEBUG [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3569edd5, started on Sun Dec 22 13:10:40 EET 2019, parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77a7cf58
19-12-22 13:12 INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Unregistering application USER-SERVICE with eureka with status DOWN
19-12-22 13:12 WARN  [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1577013175244, current=DOWN, previous=UP]
19-12-22 13:12 DEBUG [com.netflix.discovery.InstanceInfoReplicator] - Executing on-demand update of local InstanceInfo
19-12-22 13:12 DEBUG [com.netflix.discovery.InstanceInfoReplicator] - Canceling the latest scheduled update, it will be rescheduled at the end of on demand update
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093: registering service...
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@1dee326c closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@1dee326c shut down
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@1dee326c closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP POST http://localhost:8761/eureka//apps/USER-SERVICE with instance air-julia:user-service:8093; statusCode=N/A
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 WARN  [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 WARN  [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
19-12-22 13:12 DEBUG [org.mongodb.driver.connection] - Closing connection connectionId{localValue:4, serverValue:41}
19-12-22 13:12 INFO  [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'applicationTaskExecutor'
19-12-22 13:12 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans on shutdown
19-12-22 13:12 DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Unregistering JMX-exposed beans
19-12-22 13:12 INFO  [org.mongodb.driver.connection] - Closed connection [connectionId{localValue:3, serverValue:40}] to localhost:27017 because the pool has been closed.
19-12-22 13:12 DEBUG [org.mongodb.driver.connection] - Closing connection connectionId{localValue:3, serverValue:40}
19-12-22 13:12 INFO  [org.mongodb.driver.connection] - Closed connection [connectionId{localValue:2, serverValue:39}] to localhost:27017 because the pool has been closed.
19-12-22 13:12 DEBUG [org.mongodb.driver.connection] - Closing connection connectionId{localValue:2, serverValue:39}
19-12-22 13:12 DEBUG [org.mongodb.driver.connection] - Closing connection connectionId{localValue:1, serverValue:38}
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Shutting down DiscoveryClient ...
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Unregistering ...
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Clearing quarantined list of size 1
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Created client for url: http://localhost:8761/eureka/
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Get connection: {}->http://localhost:8761, timeout = 5000
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - [{}->http://localhost:8761] total kept alive: 0, total issued: 0, total allocated: 0 out of 200
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - No free connections [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Available capacity: 50 out of 50 [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Creating new connection [{}->http://localhost:8761]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connect to localhost:8761 timed out. Connection will be retried using another IP address
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnectionOperator] - Connecting to localhost:8761
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5b5b8413 closed
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5b5b8413 shut down
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Released connection is not reusable.
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Releasing connection [{}->http://localhost:8761][null]
19-12-22 13:12 DEBUG [org.apache.http.impl.conn.DefaultClientConnection] - Connection org.apache.http.impl.conn.DefaultClientConnection@5b5b8413 closed
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Notifying no-one, there are no waiting threads
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient] - Jersey HTTP DELETE http://localhost:8761/eureka//apps/USER-SERVICE/air-julia:user-service:8093; statusCode=N/A
19-12-22 13:12 ERROR [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 more
19-12-22 13:12 WARN  [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)
19-12-22 13:12 ERROR [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_USER-SERVICE/air-julia:user-service:8093 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.MonitoredConnectionManager] - Closing connections idle longer than 0 SECONDS
19-12-22 13:12 DEBUG [com.netflix.discovery.shared.NamedConnectionPool] - Closing connections idle longer than 0 SECONDS
19-12-22 13:12 INFO  [com.netflix.discovery.DiscoveryClient] - Completed shut down of DiscoveryClient
